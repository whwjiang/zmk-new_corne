#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        test_scroll: test_scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "TEST_SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "TYPE";
            bindings = <
&kp TAB         &kp SQT        &kp COMMA  &kp PERIOD  &kp P         &kp Y                                        &mmv MOVE_UP                     &kp F           &kp G        &kp C               &kp R  &kp L  &kp BACKSPACE
&caps_word      &kp A          &kp O      &kp E       &kp U         &kp I                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp D           &kp H        &kp T               &kp N  &kp S  &kp SLASH
&kp LEFT_SHIFT  &kp SEMICOLON  &kp Q      &kp J       &kp K         &kp X           &mkp MCLK                    &mmv MOVE_DOWN                   &kp B           &kp M        &kp W               &kp V  &kp Z  &kp RIGHT_SHIFT
                                          &kp LCTRL   &lt 1 ESCAPE  &mt LGUI ENTER                                                                &mt RGUI SPACE  &lt 2 COLON  &mt RALT BACKSPACE
            >;

            sensor-bindings = <&test_scroll>;
        };

        lower_layer {
            display-name = "NUM";
            bindings = <
&bootloader  &kp NUMBER_1     &kp N2       &kp N3     &kp N4      &kp N5                                &trans          &kp N6     &kp N7                &kp N8                 &kp N9             &kp N0           &trans
&sys_reset   &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                   &trans  &trans  &trans  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE     &kp RIGHT_BRACE  &trans
&trans       &kp GRAVE        &kp AMPS     &kp BSLH   &kp CARET   &kp UNDERSCORE  &kp C_MUTE            &trans          &kp MINUS  &kp EQUAL             &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp ASTRK        &trans
                                           &trans     &trans      &trans                                                &trans     &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "NAV";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp HOME                                  &trans          &kp RA(H)         &kp RA(J)         &kp RA(K)         &kp RA(L)         &kp RA(COMMA)     &bootloader
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp PAGE_UP                       &trans  &trans  &trans  &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT         &kp RA(SLASH)     &sys_reset
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAGE_DOWN  &rgb_ug RGB_TOG            &trans          &kp RA(NUMBER_1)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(NUMBER_5)  &kp RA(TAB)
                         &trans   &trans   &trans                                                    &trans            &trans            &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
