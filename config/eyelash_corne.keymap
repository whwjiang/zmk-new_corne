#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        test_scroll: test_scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "TEST_SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <500>;
        };

        bl_test: bl_test {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BL_TEST";
            #sensor-binding-cells = <0>;
            bindings = <&bl BL_INC>, <&bl BL_DEC>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <0 13>;
            layers = <0>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <12 27>;
            layers = <0>;
        };

        reset_left {
            bindings = <&sys_reset>;
            key-positions = <13 28>;
            layers = <0>;
        };

        reset_right {
            bindings = <&sys_reset>;
            key-positions = <27 41>;
            layers = <0>;
        };

        bt0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <1 14>;
            layers = <0>;
        };

        bt1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <15 2>;
            layers = <0>;
        };

        bt2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <3 16>;
            layers = <0>;
        };

        bt3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <4 17>;
            layers = <0>;
        };

        bt4 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <5 18>;
            layers = <0>;
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <29 14>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        type_layer {
            display-name = "TYPE";
            bindings = <
&kp TAB         &kp GRAVE  &kp COMMA  &kp PERIOD        &kp P               &kp Y                                   &kp UP                &kp F      &kp G       &kp C            &kp R  &kp L  &kp BACKSPACE
&kp CAPSLOCK    &kp A      &kp O      &kp E             &kp U               &kp I                         &kp LEFT  &mkp LCLK  &kp RIGHT  &kp D      &kp H       &kp T            &kp N  &kp S  &kp SLASH
&kp LEFT_SHIFT  &kp MINUS  &kp Q      &kp J             &kp K               &kp X           &kp C_MUTE              &kp DOWN              &kp B      &kp M       &kp W            &kp V  &kp Z  &kp RIGHT_SHIFT
                                      &mt LCTRL ESCAPE  &lt 1 SINGLE_QUOTE  &mt LGUI ENTER                                                &kp SPACE  &lt 2 SEMI  &mt RALT DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        num_layer {
            display-name = "NUM";
            bindings = <
&trans  &kp NUMBER_1     &kp N2       &kp N3            &kp N4             &kp N5                          &kp UP                 &kp N6     &kp N7          &kp N8           &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND         &kp DOLLAR         &kp PERCENT              &kp B  &trans          &kp W  &kp CARET  &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &kp PLUS     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &none           &kp DOWN_ARROW         &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH         &kp PIPE               &trans
                                      &trans            &trans             &trans                                                 &trans     &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        nav_layer {
            display-name = "NAV/FN";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp HOME                                  &trans          &kp RA(H)         &kp RA(J)         &kp RA(K)         &kp RA(L)         &trans            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp PAGE_UP                       &trans  &trans  &trans  &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT         &kp RA(TAB)       &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAGE_DOWN  &rgb_ug RGB_TOG            &trans          &kp RA(NUMBER_1)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(NUMBER_5)  &kp RA(NUMBER_6)
                         &trans   &trans   &trans                                                    &trans            &trans            &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        fn_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &trans          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            label = "FN";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
