#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "TYPE";
            bindings = <
&kp GRAVE       &kp SQT        &kp COMMA  &kp PERIOD    &kp P         &kp Y                                  &kp UP_ARROW             &kp F                &kp G        &kp C                &kp R  &kp L  &kp BACKSPACE
&kp CAPSLOCK    &kp A          &kp O      &kp E         &kp U         &kp I                        &kp LEFT  &kp ENTER     &kp RIGHT  &kp D                &kp H        &kp T                &kp N  &kp S  &kp MINUS
&kp LEFT_SHIFT  &kp SEMICOLON  &kp Q      &kp J         &kp K         &kp X           &mkp MCLK              &kp DOWN                 &kp B                &kp M        &kp W                &kp V  &kp Z  &kp SLASH
                                          &mt LGUI TAB  &lt 1 ESCAPE  &mt LALT ENTER                                                  &mt RIGHT_ALT SPACE  &lt 2 COLON  &mt RCTRL BACKSPACE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUM";
            bindings = <
&bootloader  &trans     &kp LG(W)  &trans     &trans     &trans                                &mmv MOVE_UP                     &kp PLUS     &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9    &kp SLASH  &kp HOME
&sys_reset   &kp LG(A)  &kp LG(S)  &kp LG(D)  &kp LG(F)  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mt H MINUS  &mt J NUMBER_4  &mt K NUMBER_5  &mt L NUMBER_6  &kp EQUAL  &kp PG_UP
&trans       &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N0       &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3    &trans     &kp PG_DN
                                   &trans     &trans     &trans                                                                 &trans       &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "SYM";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                              &trans          &kp AMPERSAND    &kp LBKT              &kp RBKT               &kp CARET  &kp AT_SIGN    &bootloader
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12                     &trans  &trans  &trans  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp POUND  &kp BACKSLASH  &sys_reset
&trans  &trans  &trans  &trans   &trans   &trans   &rgb_ug RGB_TOG            &trans          &kp MINUS        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE   &kp GRAVE      &trans
                        &trans   &trans   &trans                                              &trans           &trans                &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
